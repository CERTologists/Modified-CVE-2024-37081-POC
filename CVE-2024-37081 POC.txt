import os
import subprocess

def print_banner()
    banner = r
 ██▒   █▓ ███▄ ▄███▓ █     █░ ▄▄▄       ██▀███  ▓█████     ██▒   █▓ ▄████▄  ▓█████  ███▄    █ ▄▄▄█████▓▓█████  ██▀███  
▓██░   █▒▓██▒▀█▀ ██▒▓█░ █ ░█░▒████▄    ▓██ ▒ ██▒▓█   ▀    ▓██░   █▒▒██▀ ▀█  ▓█   ▀  ██ ▀█   █ ▓  ██▒ ▓▒▓█   ▀ ▓██ ▒ ██▒
 ▓██  █▒░▓██    ▓██░▒█░ █ ░█ ▒██  ▀█▄  ▓██ ░▄█ ▒▒███       ▓██  █▒░▒▓█    ▄ ▒███   ▓██  ▀█ ██▒▒ ▓██░ ▒░▒███   ▓██ ░▄█ ▒
  ▒██ █░░▒██    ▒██ ░█░ █ ░█ ░██▄▄▄▄██ ▒██▀▀█▄  ▒▓█  ▄      ▒██ █░░▒▓▓▄ ▄██▒▒▓█  ▄ ▓██▒  ▐▌██▒░ ▓██▓ ░ ▒▓█  ▄ ▒██▀▀█▄  
   ▒▀█░  ▒██▒   ░██▒░░██▒██▓  ▓█   ▓██▒░██▓ ▒██▒░▒████▒      ▒▀█░  ▒ ▓███▀ ░░▒████▒▒██░   ▓██░  ▒██▒ ░ ░▒████▒░██▓ ▒██▒
   ░ ▐░  ░ ▒░   ░  ░░ ▓░▒ ▒   ▒▒   ▓▒█░░ ▒▓ ░▒▓░░░ ▒░ ░      ░ ▐░  ░ ░▒ ▒  ░░░ ▒░ ░░ ▒░   ▒ ▒   ▒ ░░   ░░ ▒░ ░░ ▒▓ ░▒▓░
   ░ ░░  ░  ░      ░  ▒ ░ ░    ▒   ▒▒ ░  ░▒ ░ ▒░ ░ ░  ░      ░ ░░    ░  ▒    ░ ░  ░░ ░░   ░ ▒░    ░     ░ ░  ░  ░▒ ░ ▒░
     ░░  ░      ░     ░   ░    ░   ▒     ░░   ░    ░           ░░  ░           ░      ░   ░ ░   ░         ░     ░░   ░ 
      ░         ░       ░          ░  ░   ░        ░  ░         ░  ░ ░         ░  ░         ░             ░  ░   ░     
     ░                                                         ░   ░                                                   
                                              by Mr r00t
    
    print(banner)
    print(--------  10)

def create_non_malicious_code()
    # Directorio temporal para almacenar el código no malicioso
    safe_dir = tmpsafe
    os.makedirs(safe_dir, exist_ok=True)

    # Ruta al código no malicioso
    safe_python_code = os.path.join(safe_dir, __init__.py)

    # Crear código no malicioso en tmp
    with open(safe_python_code, w) as file
        file.write('print(Safe code executed!)n')

def execute_with_environment_variable(var_name, value)
    # Establecer variable ambiental
    os.environ[var_name] = value
    
    # Comando para imprimir la variable de entorno
    command = fpython3 -c 'import os; print(os.environ[{var_name}])'

    # Ejecutar el comando
    subprocess.run(command, shell=True)

def main()
    print_banner()
    create_non_malicious_code()
    
    # Ejecución con diferentes variables ambientales
    execute_with_environment_variable(PYTHONPATH, tmpsafe)
    execute_with_environment_variable(VMWARE_PYTHON_PATH, tmpsafe)
    execute_with_environment_variable(VMWARE_PYTHON_BIN, binbash)

    print(Verificación completada. Código no malicioso ejecutado correctamente.)

if __name__ == __main__
    main()
